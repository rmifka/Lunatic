name: Build Lunatic Solution

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        architecture: [ win-x64, win-x86, linux-x64 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore Lunatic.sln

      - name: Build Lunatic.Bootstrapper
        run: dotnet build Lunatic.Bootstrapper/Lunatic.Bootstrapper.csproj --configuration Release

      - name: Build Lunatic.Public
        run: dotnet build Lunatic.Public/Lunatic.Public.csproj --configuration Release

      - name: Build Lunatic.Loader
        run: dotnet build Lunatic.Loader/Lunatic.Loader.csproj --configuration Release

      - name: Build Lunatic.Installer
        run: dotnet publish Lunatic.Installer/Lunatic.Installer.csproj --configuration Release --self-contained --runtime ${{ matrix.architecture }}

      - name: Create release directory
        run: mkdir -p release

      - name: Copy build artifacts
        run: cp -r Lunatic.Installer/bin/Release/net9.0/${{ matrix.architecture }}/* release/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lunatic-build-${{ matrix.architecture }}
          path: release/
